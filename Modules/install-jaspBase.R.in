# Generated from install-jaspBase.R.in
#
Sys.setenv(GITHUB_PAT="@GITHUB_PAT@")
Sys.setenv(RENV_PATHS_ROOT="@MODULES_RENV_ROOT_PATH@")
Sys.setenv(RENV_PATHS_CACHE="@MODULES_RENV_CACHE_PATH@")
Sys.setenv(JASPENGINE_LOCATION="@JASP_ENGINE_PATH@/JASPEngine")
options(renv.config.install.verbose = @RENV_INSTALL_VERBOSE@)

#Load the post-install fixes from jaspBase. Think Baron von Munchausen ;)
source("@PROJECT_SOURCE_DIR@/Engine/jaspBase/R/utility.R")
source("@PROJECT_SOURCE_DIR@/Engine/jaspBase/R/checkSums.R")
source("@PROJECT_SOURCE_DIR@/Engine/jaspBase/R/assignFunctionInPackage.R")
source("@PROJECT_SOURCE_DIR@/Engine/jaspBase/R/moduleInstall.R")
source("@PROJECT_SOURCE_DIR@/Engine/jaspBase/R/utility.R")

# The R_LIBRARY_PATH might already be there, but depending on the configuration
# of the CMake, we might be installing in a different location, so, I just add
# it anyway! It gets to if-y.

if (@IS_FLATPAK_USED@) {
  source("/app/lib64/Rprofile.R")
  options(repos = "@R_REPOSITORY@")
}

.libPaths(c("@R_LIBRARY_PATH@"))

modulePkg     <- "@PROJECT_SOURCE_DIR@/Engine/jaspBase"
moduleLibrary <- "@R_LIBRARY_PATH@"
prompt        <- FALSE

needsInstallation <- md5SumsChanged(modulePkg, moduleLibrary)
if (needsInstallation) {
  options(
    renv.cache.linkable = TRUE,
    configure.vars = c(jaspBase = "INCLUDE_DIR='@PROJECT_SOURCE_DIR@/Common/jaspColumnEncoder'")
  )
}

# compute and cache all hashes and dependencies of all jasp modules
commitHashObject <- createCommitHashObject(
  jaspRoot = "@PROJECT_SOURCE_DIR@",
  file     = file.path("@R_LIBRARY_PATH@", "jaspBase", "cachedCommitInfo.rds")
)

if (needsInstallation) {

  installedPath <- file.path("@R_LIBRARY_PATH@", "jaspBase")
  # normalizePath resolves the symlink
  cachePath <- normalizePath(installedPath)

  # construct the cache path with the custom hash
  jaspBaseVersion <- commitHashObject[["descriptions"]][["jaspBase"]][["Version"]]
  jaspBaseHash    <- commitHashObject[["commitHashes"]][["jaspBase"]]
  newJaspBaseCachePath <- file.path("@MODULES_RENV_CACHE_PATH@", "v5", "jaspBase", jaspBaseVersion, jaspBaseHash)

  if (dirname(cachePath) != newJaspBaseCachePath) {
    # copy the old cache to the new cache and delete the old cache
    if (dir.exists(newJaspBaseCachePath))
      unlink(newJaspBaseCachePath, recursive = TRUE)
    dir.create(newJaspBaseCachePath, recursive = TRUE)

    result <- file.copy(cachePath, newJaspBaseCachePath, recursive = TRUE)
    unlink(dirname(cachePath), recursive = TRUE)

    # update the symlink
    renv:::renv_file_link(file.path(newJaspBaseCachePath, "jaspBase"), target = installedPath, overwrite = TRUE)
  }
}

# Converting the absolute symlinks to relative symlinks on macOS
# Todo, I can do this using CMake like I do on Windows
if (getOS() == "osx") {
  source('@MODULES_BINARY_PATH@/symlinkTools.R')
  convertAbsoluteSymlinksToRelative('@R_LIBRARY_PATH@', '@MODULES_RENV_CACHE_PATH@')
}
