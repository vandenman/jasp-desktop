% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_rangeframe.R
\docType{data}
\name{geom_rangeframe}
\alias{geom_rangeframe}
\alias{GeomRangeFrame}
\title{Add base R's bty = 'n' to ggplot2 objects.}
\usage{
geom_rangeframe(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = "identity",
  ...,
  sides = "bl",
  panelInfo = list(t = "x.sec.major", r = "y.sec.major", b = "x.major", l = "y.major"),
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = FALSE
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}} or
\code{\link[ggplot2:aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{layer()}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{colour = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}

\item{sides}{A string that controls which sides of the plot the frames appear on.
It can be set to a string containing any of \code{'trbl'}, for top, right,
bottom, and left. By default, only the bottom and left axes lines are drawn. 
Note that this is checked at drawing time, so 'b' always means bottom even when using \code{\link[ggplot2]{coord_flip}}.}

\item{panelInfo}{A list that specifies what information is drawn from what component of panel_scales. 
Usually, \code{x.major} corresponds to the bottom axis. However, if a scale is used to move e.g., 
the x-axis to be above the plot then this needs to be adjusted to \code{x.sec.major_source}. By default,
this argument assumes that axis lines above and right of a plot use \code{\link[ggplot2]{sec_axis}} and are
therefore draw information from \code{*.sec.major_source}. You can partially set this list; if e.g., 
\code{"t"} is missing it will be filled with its default value.}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}
}
\description{
Axis lines which extend to the maximum and minimum of the axis breaks. The implementation and documentation is largely adapted from \code{\link[ggthemes]{geom_rangeframe}}.
}
\section{Aesthetics}{

\itemize{
\item colour
\item size
\item linetype
\item alpha
}
}

\examples{
library(ggplot2)
library(JASPgraphs)

# an example plot
graph <- ggplot(mtcars, aes(wt, mpg)) +
  geom_point()

# add bty = 'n' for x and y-axes.
graph +
 geom_rangeframe() +
 themeJaspRaw()

# automatically done by themeJasp
themeJasp(graph)

# only draw the x-axis line
graph +
  geom_rangeframe(sides = "b") +
  themeJaspRaw()

# coord_flip does not interact with sides
graph + 
  coord_flip() +
  geom_rangeframe(sides = "b") + 
  themeJaspRaw()

# add axis lines right and above of plot:
graph + 
  scale_x_continuous(sec.axis = sec_axis(~ log10(.))) + 
  scale_y_continuous(sec.axis = sec_axis(~ log10(.))) + 
  geom_rangeframe(sides = "trbl") + 
  themeJaspRaw()

# set x-axis to above the plot and draw a line there
graph + 
  scale_x_continuous(position = "top") + 
  geom_rangeframe(sides = "tl", panelInfo = list(t = "x.major")) + 
  themeJaspRaw()
}
\references{
Tufte, Edward R. (2001) The Visual Display of Quantitative Information, Chapter 6.

Jeffrey B. Arnold (2019). ggthemes: Extra Themes, Scales and Geoms for 'ggplot2'. R package version 4.2.0. https://CRAN.R-project.org/package=ggthemes
}
\keyword{datasets}
