% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PlotPriorAndPosterior.R
\name{PlotPriorAndPosterior}
\alias{PlotPriorAndPosterior}
\title{Create a prior-posterior plot.}
\usage{
PlotPriorAndPosterior(
  dfLines,
  dfPoints = NULL,
  BF = NULL,
  CRI = NULL,
  median = NULL,
  xName = NULL,
  yName = "Density",
  drawPizzaTxt = !is.null(BF),
  drawCRItxt = !is.null(CRI),
  bfType = c("BF01", "BF10", "LogBF10"),
  hypothesis = c("equal", "smaller", "greater"),
  bfSubscripts = NULL,
  pizzaTxt = hypothesis2BFtxt(hypothesis)$pizzaTxt,
  bty = list(type = "n", ldwX = 0.5, lwdY = 0.5),
  lineColors = NULL,
  CRItxt = "95\% CI: ",
  medianTxt = "Median:",
  ...
)
}
\arguments{
\item{dfLines}{A dataframe with \code{$x}, \code{$y}, and optionally \code{$g}.}

\item{dfPoints}{A dataframe with \code{$x}, \code{$y}, and optionally \code{$g}.}

\item{BF}{Numeric, with value of Bayes factor. This MUST correspond to bfType.}

\item{CRI}{Numeric of length 2, Credible interval of posterior.}

\item{median}{Numeric, median of posterior.}

\item{xName}{String or expression, displayed on the x-axis.}

\item{yName}{String or expression, displayed on the y-axis.}

\item{drawPizzaTxt}{Logical, should there be text above and below the pizza plot?}

\item{drawCRItxt}{Logical, should the credible interval be displayed in text?}

\item{bfType}{String, what is the type of BF? Options are "BF01", "BF10", or "LogBF10".}

\item{hypothesis}{String, what was the hypothesis? Options are "equal", "smaller", or "greater".}

\item{bfSubscripts}{String, manually specify the BF labels.}

\item{pizzaTxt}{String vector of length 2, text to be drawn above and below pizza plot.}

\item{bty}{List of three elements. Type specifies the box type, ldwX the width of the x-axis, lwdY the width of the y-axis.}

\item{lineColors}{NULL to omit line colors, a character vector with colors, or any other value to add \code{color = g} to the aestethics of the main plot.}

\item{CRItxt}{String, display the credible interval as \code{paste0(CRItxt, "[", lower, ", ", upper, "]")}.}

\item{medianTxt}{String, display the median as \code{paste(medianTxt, formatC(median, 3, format = "f"))}.}

\item{...}{Unused.}
}
\value{
If BF, CRI, and median are all NULL a ggplot, otherwise a gtable.
}
\description{
Create a prior-posterior plot.
}
\examples{
n <- 100
x <- seq(-3, 3, length.out = n)
dfLines <- data.frame(
  x = x,
  y = c(dnorm(x, 0, 1), dnorm(x, 1, .5)),
  g = rep(c("Prior", "Posterior"), each = n)
)

PlotPriorAndPosterior(dfLines)
dfPoints <- data.frame(
  x = c(0, 0),
  y = dnorm(0, c(0, 1), c(1, .5)),
  g = c("Prior", "Posterior")
)

PlotPriorAndPosterior(dfLines, dfPoints)

# add BF pizza
BF10 <- dnorm(0, 1, .5) / dnorm(0, 0, 1)
PlotPriorAndPosterior(dfLines, dfPoints, BF10,      bfType = "BF10") # default
PlotPriorAndPosterior(dfLines, dfPoints, 1 / BF10,  bfType = "BF01")
PlotPriorAndPosterior(dfLines, dfPoints, log(BF10), bfType = "LogBF10")

# change hypothesis
PlotPriorAndPosterior(dfLines, dfPoints, BF10, hypothesis = "smaller")
PlotPriorAndPosterior(dfLines, dfPoints, BF10, hypothesis = "greater")

# add credible interval
CRI <- qnorm(c(0.025, 0.975), 1, .5)
PlotPriorAndPosterior(dfLines, dfPoints, CRI = CRI)
PlotPriorAndPosterior(dfLines, dfPoints, CRI = CRI, drawCRItxt = FALSE)

# add median
median <- qnorm(0.5, 1, .5)
PlotPriorAndPosterior(dfLines, dfPoints, median = median)

# or combine them all
PlotPriorAndPosterior(dfLines, dfPoints, BF10, CRI = CRI, median = median)
}
